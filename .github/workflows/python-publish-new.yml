# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Azure Pipeline

on:
  push:
    branches:
      - main
    
#     paths:
#       - 'databricks/*'

# env:
#   ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
#   ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
#   ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
#   ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install --upgrade pylint
          pip install pytest
          pip install pytest-azurepipelines
          pip install pytest-cov
          pip install azure-cli

      - name: Lint Tests
        run: |
          pylint | find -name '*.py'

#       - name: SonarQube
#         uses: sonarsource/sonarqube-scan-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         with:
#           projectBaseDir: .
#           extraProperties: |
#             sonar.projectKey=odd-Sonarqube
#             sonar.projectName=odd-Sonarqube

#      - name: Test Results
#        uses: EnricoMi/publish-unit-test-result-action@v2.4.1
#        if: always()
#        with:
#          files: '**/junit/*.xml'
   
      - name: Build package
        run: python setup.py bdist_wheel
      - name: Copy Notebooks
        run: |
          mkdir -p notebooks
          cp -r *.py notebooks/

      - name: Publish Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: py-files
          path: notebooks/


