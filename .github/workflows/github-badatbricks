name: CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pylint
        
    - name: Run unit tests
      run: pytest tests/unittest/ --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html

    - name: Run code coverage
      uses: codecov/codecov-action@v2.1.11
      with:
        flags: unittests
        file: ./coverage.xml
        name: codecov-umbrella

    #- name: Run SonarQube analysis
     # uses: SonarSource/sonarqube-scan-action@master
      #with:
        #sonarqube-url: ${{ secrets.SONARQUBE_URL }}
        #sonarqube-token: ${{ secrets.SONARQUBE_TOKEN }}
        #project-key: ${{ secrets.SONARQUBE_PROJECT_KEY }}
        #options: '-Dsonar.sources=./databricks'
        
    - name: Build whl file
      run: |
        pip install wheel
        python setup.py sdist bdist_wheel
        
    - name: Create tag and release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: dapi39f4dcb5463a8c599a6f374080d6fb53-3
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        body: |
          Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload whl file
      uses: actions/upload-artifact@v2
      with:
        name: whl-file
        path: dist/*.whl
        if-no-files-found: error

    - name: Publish Test Results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: junit/test-results.xml

    - name: Publish Build Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: |
          dist/*.whl
          junit/test-results.xml
